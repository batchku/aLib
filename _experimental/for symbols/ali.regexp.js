/*	 simple javascript regular expression object*/// set up inlets/outlets/assist stringsoutlets = 4;setinletassist(0,"match/pattern/test/modifier");setoutletassist(3,"is a match (int)");setoutletassist(2,"substring list");setoutletassist(1,"string offset (int)");setoutletassist(0,"matching string (symbol)");// global varables and codevar vpattern = ".*";var vmodifier = "i";var vregexp = new RegExp(vpattern,vmodifier);function pattern(p){	vpattern = p;	vregexp.compile(vpattern,vmodifier);}function modifier(m){	vmodifier = m;	vregexp.compile(vpattern,vmodifier);}function match(v){	var r = vregexp.exec(v);	if (r) {		// boolean matched		outlet(3,1); 			// output substrings		if (r.length>1) {			var i;			var substr = new Array(); 			for (i=0;i<(r.length-1);i++) {				substr[i] = r[i+1];			}			outlet(2,substr);		}		// output string index		outlet(1,r.index);		// output match		outlet(0,r[0]);	} else {		outlet(3,0);	}}function test(v){	outlet(3,vregexp.test(v));}function replace(v,z){	var r = v.replace(vregexp,z);	outlet(0,r);}function removespaces(v){	var r = v.replace(vregexp,"");	outlet(0,r);}function split(v){	var r = v.split(vregexp);	if (r) {		// boolean matched		outlet(3,1); 			// output substrings		outlet(2,r);	} else {		outlet(3,0);	}}